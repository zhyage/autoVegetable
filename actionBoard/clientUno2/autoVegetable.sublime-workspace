{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"getEq",
				"getEquipId"
			],
			[
				"equip",
				"equipId"
			],
			[
				"pr",
				"print"
			],
			[
				"board",
				"boardTypeId"
			],
			[
				"sendD",
				"sendDataType"
			],
			[
				"re",
				"recvData"
			],
			[
				"ethern",
				"ethernetHd"
			],
			[
				"equi",
				"equipNum"
			],
			[
				"equ",
				"equipNum"
			],
			[
				"dr",
				"driveFunction"
			],
			[
				"coll",
				"collectData"
			],
			[
				"ret",
				"returnVal"
			],
			[
				"eq",
				"equipNum"
			],
			[
				"temperatureE",
				"temperatureEquip_1"
			],
			[
				"get",
				"getEquipName"
			],
			[
				"crea",
				"createEquip"
			],
			[
				"dri",
				"driveData"
			],
			[
				"IO",
				"IONum"
			],
			[
				"e",
				"equipState"
			],
			[
				"Boar",
				"BoardCap"
			],
			[
				"colle",
				"collectTempteratureData"
			],
			[
				"collect",
				"collectMoistureData"
			],
			[
				"u",
				"uint32_t"
			],
			[
				"rru",
				"rruPortId"
			],
			[
				"read",
				"readUint16"
			],
			[
				"pos",
				"position_"
			],
			[
				"po",
				"position_"
			],
			[
				"g_",
				"g_indictorDirect"
			],
			[
				"par",
				"parameteList〔argument〕"
			],
			[
				"expre",
				"expressionHandle〔module〕"
			],
			[
				"gener",
				"generateSubmitFormularReq"
			],
			[
				"submit",
				"submitFormularReq"
			],
			[
				"expr",
				"expressStringList"
			],
			[
				"g_gen",
				"g_generateFormularDataList"
			],
			[
				"tar",
				"targetname"
			],
			[
				"param",
				"parameterList"
			],
			[
				"colNam",
				"colNameList〔variable〕"
			],
			[
				"suff",
				"suffixName〔variable〕"
			],
			[
				"para",
				"parameterList"
			],
			[
				"formu",
				"formularExpress〔argument〕"
			],
			[
				"fo",
				"formularExpress"
			],
			[
				"parameter",
				"parameterAppendStr"
			],
			[
				"exp",
				"expressionList"
			],
			[
				"butt",
				"buttonNameList"
			],
			[
				"current",
				"currentFormular〔variable〕"
			],
			[
				"colNa",
				"colNameList〔variable〕"
			],
			[
				"colN",
				"colNameList"
			],
			[
				"col",
				"colNameList"
			],
			[
				"m",
				"methodList"
			]
		]
	},
	"buffers":
	[
		{
			"file": "clientUno2.ino",
			"settings":
			{
				"buffer_size": 5243,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Z/2autovegetable/autovegetable/server/TOPConfigure.json",
			"settings":
			{
				"buffer_size": 116,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Z/2autovegetable/autovegetable/server/fakeClient.js",
			"settings":
			{
				"buffer_size": 2303,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Z/2autovegetable/autovegetable/server/boardDefine.json",
			"settings":
			{
				"buffer_size": 1130,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Z/2autovegetable/autovegetable/server/autovegetableServer.js",
			"settings":
			{
				"buffer_size": 20229,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Z/2autovegetable/autovegetable/server/equipTypeDefine.json",
			"settings":
			{
				"buffer_size": 1173,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ethernetHandle/ethernetHandle.cpp",
			"settings":
			{
				"buffer_size": 1566,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ethernetHandle/ethernetHandle.h",
			"settings":
			{
				"buffer_size": 836,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "prett",
		"selected_items":
		[
			[
				"prett",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"indent",
				"Indent XML"
			],
			[
				"jsf",
				"Javascript Beautify"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"Package Control: install package",
				"Package Control: Install Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/work/arduino/autoVegetable/clientUno2",
		"/D/work/arduino/autoVegetable/clientUno2/analogInSensor",
		"/D/work/arduino/autoVegetable/clientUno2/digitOutEquip",
		"/D/work/arduino/autoVegetable/clientUno2/equipInterface",
		"/D/work/arduino/autoVegetable/clientUno2/ethernetHandle",
		"/D/work/arduino/autoVegetable/clientUno2/luminaceSensor",
		"/D/work/arduino/autoVegetable/clientUno2/moistureSensor",
		"/D/work/arduino/autoVegetable/clientUno2/relay",
		"/D/work/arduino/autoVegetable/clientUno2/soilMoistureSensor",
		"/D/work/arduino/autoVegetable/clientUno2/temperatureSensor"
	],
	"file_history":
	[
		"/D/userdata/vdmc34/Desktop/test.txt",
		"/D/work/arduino/autoVegetable/clientUno2/digitOutEquip/digitOutEquip.h",
		"/D/work/arduino/autoVegetable/clientUno2/digitOutEquip/digitOutEquip.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/equipInterface/equipInterface.cpp",
		"/C/Program Files (x86)/Arduino/libraries/Ethernet/src/EthernetUdp.h",
		"/C/Program Files (x86)/Arduino/libraries/Ethernet/src/EthernetUdp.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/temperatureSensor/temperatureSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/temperatureSensor/temperatureSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/analogInSensor/analogInSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/equipInterface/equipInterface.h",
		"/D/work/arduino/autoVegetable/clientUno2/soilMoistureSensor/soilMoistureSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/luminaceSensor/luminaceSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/moistureSensor/moistureSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/relay/relayDrive.h",
		"/D/work/arduino/autoVegetable/clientUno2/ethernetHandle/ethernetHandle.h",
		"/D/work/arduino/autoVegetable/clientUno2/ethernetHandle/ethernetHandle.cpp",
		"/Z/indexStatistic/methodConf/weightFormula.json",
		"/Z/autovegetable/autovegetable/public/boardConf/boardDefine.json",
		"/Z/indexStatistic/public/javascripts/biaoZhunHua.js",
		"/D/work/features/megazone/src/nodeoam/src/mz.js",
		"/Z/indexStatistic/methodConf/biaoZhunFaformula.json",
		"/D/work/arduino/autoVegetable/clientUno2/clientUno2.ino",
		"/Z/autovegetable/autovegetable/server/autovegetableServer.js",
		"/Z/autovegetable/autovegetable/public/boardConf/uno3.json",
		"/D/work/features/megazone/src/nodeoam/src/controller_startup/startupController.js",
		"/Z/arduino/stateMachineTest/stateMachineTest.c",
		"/D/work/arduino/autoVegetable/clientUno2/ethernet/ethernetHandle.h",
		"/D/work/arduino/autoVegetable/clientUno2/ethernet/ethernetHandle.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/moistureSensor/moistureSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/soilMoistureSensor/soilMoistureSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/analogInSensor/analogInSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/relay/relayDrive.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/luminaceSensor/luminaceSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/digitalOutEquip/digitOutEquip.h",
		"/D/work/arduino/autoVegetable/clientUno2/digitalOutEquip/digitOutEquip.cpp",
		"/D/work/arduino/autoVegetable/tmp/relay/relayDrive.cpp",
		"/D/work/arduino/autoVegetable/tmp/light/light.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/analogInEquip/analogInSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/analogInEquip/analogInSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/analogEquip/analogSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno2/analogEquip/analogSensor.h",
		"/Z/arduino/equipInterface/equipInterface.cpp",
		"/Z/arduino/equipInterface/equipInterface.h",
		"/Z/arduino/temperatureSensor/temperatureSensor.h",
		"/Z/arduino/templateArduino.cpp",
		"/Z/arduino/moistureSensor/moistureSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/simpleTimer/simpleTimer.h",
		"/D/work/arduino/autoVegetable/clientUno/clientUno.ino",
		"//nsn-intra.net/eefs/ROTTA/fujie/All fiber/Exceptional_RF Fiber Insert_Removal Break_both_Primary_Secondary_Link_try2.7z",
		"/C/Program Files (x86)/Arduino/libraries/Dht11/dht11.h",
		"/Z/arduino/temperatureSensor/temeratureSensor.h",
		"/D/work/arduino/autoVegetable/clientUno2/interface/interface.h",
		"/Z/test/template/classTemplate.cpp",
		"/Z/test/template/functionTemplate.cpp",
		"/Z/test/template/specialTemplate.cpp",
		"/Z/test/template/templatePassPar.cpp",
		"/D/work/arduino/autoVegetable/clientUno/moistureSensor/moistureSensor.ino",
		"/D/work/arduino/autoVegetable/clientUno/moistureSensor/moistureSensor.cpp",
		"/D/work/arduino/autoVegetable/clientUno/simpleTimer/simpleTimer.h",
		"/D/work/arduino/autoVegetable/clientUno/simpleTimer/simpleTimer.cpp",
		"/D/work/arduino/autoVegetable/clientUno/moistureSensor/moistureSensor.h",
		"/D/work/arduino/autoVegetable/clientUno/temperatureSensor/temperatureSensor.h",
		"/D/work/features/OpenCpri/ACC/BTS_DOCS_SC_OAM_LTE/acc/LTE_OAM_14461/LTE_OAM_14461.plantuml",
		"/D/work/features/OpenCpri/ACC/BTS_DOCS_SC_OAM_LTE/acc/LTE_OAM_14461/LTE_OAM_14461_AC_1.ac",
		"/D/work/arduino/doc&tools/3.例程/官方IDE/3.1 LED闪烁实验/LESSON01/LESSON01.ino",
		"/D/work/arduino/doc&tools/3.例程/官方IDE/3.8 光敏电阻实验/lesson8/lesson8.ino",
		"/D/userdata/vdmc34/Application Data/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/D/userdata/vdmc34/Application Data/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/D/work/arduino/doc&tools/3.例程/图形化IDE/1.LED闪烁实验",
		"/D/userdata/vdmc34/Desktop/zzz22.json",
		"/D/work/features/OpenCpri/ACC/LTE_OAM_14661/LTE_OAM_14461.plantuml",
		"/D/work/features/OpenCpri/ACC/LTE_OAM_14661/LTE_OAM_14461_AC_1.1.ac",
		"/D/work/features/OpenCpri/ACC/LTE_OAM_14661/LTE_OAM_14461_AC_1.2.ac",
		"/Z/indexStatistic/public/dataSave/zhy/zzz22",
		"/D/work/features/base/prontoTermintorTool/prontoTermintor/Rules/zhy_test.xml",
		"/C/Users/vdmc34/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/9BT8PIUT/OAM_Analysis_1.txt",
		"/D/work/features/OpenCpri/log/t222_notOnair/2/UZHC-T222-not-onair/SYSLOG_109.LOG",
		"/D/work/features/OpenCpri/log/ALDSwitch/20160311/SYSLOG_062/filter.log",
		"/D/work/features/OpenCpri/log/missIndication/20160311/20160310/filter.log",
		"/C/Users/vdmc34/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/QI91YKSK/OAM_analysis_1.txt",
		"/C/Users/vdmc34/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/2WKIO9K4/SEM_analysis_1.txt",
		"/C/Users/vdmc34/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/HCWREYA8/OAM_analysis_2.txt",
		"/D/work/features/OpenCpri/log/4261_guo/20160311/tcpdump_2.pcap",
		"/C/Users/vdmc34/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/V039P7K9/MCUHWAPI_Analysis_1.txt",
		"/C/Users/vdmc34/AppData/Local/Temp/checkCore.sh",
		"/C/Users/vdmc34/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/WJ7DVG6L/OAM_analysis_1.txt",
		"/D/work/features/OpenCpri/log/SWDL_issue/20160229/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/SnapShot_2016-02-26_16-51-39/TDLTEBTS/Commissioning/CUPL_BTSA_139.xml",
		"/D/work/features/OpenCpri/log/SWDL_issue/20160229/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/SnapShot_2016-02-26_16-51-39/TDLTEBTS/Commissioning/Latest_Commissioning_BTS139_20160226.xml",
		"/D/work/features/OpenCpri/log/SWDL_issue/code/aaa.sh",
		"/D/work/features/OpenCpri/log/SWDL_issue/20160229/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/SnapShot_2016-02-26_16-51-39/TDLTEBTS/Commissioning/CommissioningReport_BTS139_20160226.txt",
		"/D/work/features/OpenCpri/log/SWDL_issue/20160229/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/SnapShot_2016-02-26_16-51-39/TDLTEBTS/SiteConf/SiteConf.xml",
		"/D/work/features/OpenCpri/log/SWDL_issue/20160229/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/TL15A_ENB_0000_000655_000079_CThreadPrioToam fatal/SnapShot_2016-02-26_16-51-39/TDLTEBTS/SiteConf/SiteConf_original.xml",
		"/V/elastic/scrapy/selenium/seleniumExample/seleniumExample/spiders/example.py",
		"//192.168.56.101/ubuntuSambaShareData/elastic/scrapy/hdf/hdf/hdf/spiders/hdfSpider.py",
		"/data/dhcpCatch/self/getInforFromDhcpReq.cpp",
		"/data/dhcpCatch/self/getInforFromDhcpReq.h",
		"/data/dhcpCatch/self/main.cpp",
		"/data/2auth/passport-mongo/db.js",
		"/data/2auth/passport-mongo/app.js",
		"/data/2auth/passport-mongo/models/user.js",
		"/data/2auth/passport-mongo/passport/init.js",
		"/data/2auth/passport-mongo/passport/login.js",
		"/data/2auth/passport-mongo/passport/signup.js",
		"/data/2auth/passport-mongo/routes/index.js",
		"/data/2auth/passport-mongo/views/layout.jade",
		"/data/2auth/passport-mongo/views/register.jade",
		"/data/mongodb/mongodb.json",
		"/data/auth/passport-mongo/user.js",
		"/data/auth/passport-mongo/app.js",
		"/data/auth/passport-mongo/db.js",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/authentication/package.json",
		"/usr/local/lib/python2.7/dist-packages/py_expression_eval/__init__.py",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/javascripts/biaoZhunHua.js",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/app.js",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/views/biaoZhunHua.html",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/pythonPart/receiver.py",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/javascripts/computing.html",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/javascripts/computing.js",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/views/index.html",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/javascripts/test4.js",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/pythonPart/method/gyzsf_jiZhiFa.py",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/javascripts/ele2.js",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/pythonPart/expressionHandle.py",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/pythonPart/sheetHandle.py",
		"/D/work/ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/stylesheets/14423.css.bak",
		"/D/work/ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/public/stylesheets/14423.css",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/biaoZhunFaformula.json",
		"/media/sf_ubuntu_shared/work_under_linux/node.js/zhy_1/express_fileUpload/test1/myapp/pythonPart/method/gyzsf_junZhiFa.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"D:\\work\\arduino\\autoVegetable\\clientUno2",
			"-.tags,/root/myapp/public/javascripts",
			"-.tags",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sendCollectData",
			"collectAndSendBoardData",
			"recvData",
			"sendData",
			"getEquipName",
			"updateNodeOamStartupStatus",
			"nodeOamSettingsFile",
			"updateNodeOamStartupStatus",
			"nodeOamSettingsFile",
			"updateNodeOamStartupStatus",
			"nodeOamSettingsFile",
			"remotePort",
			"mois",
			"setTimeout",
			"timer",
			"collectAndSendBoardData",
			"driveFunction",
			"collectValveState",
			"collectAirMoistureData",
			"collectAndSendBoardData",
			"isEmptyBoardId",
			"createServerSocket",
			"collectMoistureData",
			"collectAndSendBoardData",
			"strcpy",
			"trcpy",
			"SET",
			"GREEN-FLASH",
			"CARRIERCFG",
			"OFFSETDELAY",
			"OFFSET",
			"ANTDELAYUP1",
			"OFFSETDELAY",
			"OFFSET",
			"Can't create new lease file: Permission denied",
			"OFFSETDELAY",
			"DELAY",
			"antan",
			"431",
			"offset",
			"delay",
			"431",
			"1073",
			"401",
			"CARRIERINFO",
			"ADJDELAYLIMIT",
			"ANTDELAYDOWN",
			"CARRIERCFG",
			"ERR",
			"ALD",
			"ERR",
			"DIGTX",
			"-1",
			"ERR",
			"time",
			"Item",
			"CARRIERCFG",
			"ciaddr_",
			"convertIPAddress",
			"inet",
			"GetOptMsgByMsgType",
			"optMsg",
			"collectOptions",
			"unpack",
			"OptionCollection",
			"collectOptions",
			"false",
			"inputDhcpReqMsg",
			"pdata_",
			"de",
			"printf",
			"isAuthenticated",
			"pow",
			"sin",
			"addfunc",
			"isOperator",
			"isNumber",
			"evaluate",
			"isNumber",
			"point",
			"9999",
			"computingFnSheet",
			"computingnSheet",
			"float",
			"integer",
			"isRealDataTypeValide",
			"parseFloat",
			"sessionStorage",
			"purify",
			"hover",
			"gif",
			"g_generateFormularDataList",
			"generateColHeaderForm",
			"error to set column information",
			"createForm",
			"setClickRowAndCol",
			"generateInsertColumnForm",
			"InsertColumn",
			"insertColumn",
			"dataType",
			"generateInsertColumnForm",
			"newForm",
			"saveForm",
			"newFormYes",
			"initMatrix",
			"insertColumn",
			"getDataTypeByColNo",
			"setEle",
			"setEleData",
			"checkDataValide",
			"setEleData",
			"createEle",
			"computingnSheet",
			"computingFnSheet",
			"parseExpressionMethodAndArgList",
			"generaterFormularExpressionList",
			"g_generateFormularDataList",
			"generaterFormularExpressionList",
			"g_generateFormularDataList",
			"computingMatrix",
			"submitComputExpressAndData",
			"matrix",
			"setComputExpressAndData",
			"computExpressAndData",
			"submitComputExpressAndData",
			"setComputExpressAndData",
			"computExpressAndData",
			"setComputExpressAndData"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"localStorage",
			"row clearfix"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "clientUno2.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5243,
						"regions":
						{
						},
						"selection":
						[
							[
								1561,
								1576
							],
							[
								3979,
								3994
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Arduino-like IDE/Arduino.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2629.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Z/2autovegetable/autovegetable/server/TOPConfigure.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 116,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Z/2autovegetable/autovegetable/server/fakeClient.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2303,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Z/2autovegetable/autovegetable/server/boardDefine.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1130,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Z/2autovegetable/autovegetable/server/autovegetableServer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20229,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Z/2autovegetable/autovegetable/server/equipTypeDefine.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1173,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ethernetHandle/ethernetHandle.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1566,
						"regions":
						{
						},
						"selection":
						[
							[
								1371,
								1371
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ethernetHandle/ethernetHandle.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 836,
						"regions":
						{
						},
						"selection":
						[
							[
								619,
								619
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clientUno":
	{
		"height": 124.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.stino_log":
	{
		"height": 124.0
	},
	"pinned_build_system": "",
	"project": "autoVegetable.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test4.js",
				"public/javascripts/test4.js"
			],
			[
				"biao",
				"public/javascripts/biaoZhunHua.js"
			],
			[
				"express",
				"pythonPart/expressionHandle.py"
			],
			[
				"re",
				"pythonPart/receiver.py"
			],
			[
				"handle",
				"pythonPart/sheetHandle.py"
			],
			[
				"ele",
				"public/javascripts/ele2.js"
			],
			[
				"app",
				"app.js"
			],
			[
				"expre",
				"pythonPart\\expressionHandle.py"
			],
			[
				"vali",
				"pythonPart/validateMathExpression.py"
			],
			[
				"val",
				"pythonPart/validateMathExpression.py"
			],
			[
				"inde",
				"views/index.html"
			],
			[
				"ele2.js",
				"public/javascripts/ele2.js"
			],
			[
				"comp",
				"public/javascripts/computing.js"
			],
			[
				"compu",
				"routes/computing.js"
			],
			[
				"formu",
				"biaoZhunFaformula.json"
			],
			[
				"biaozhunhua.js",
				"public/javascripts/biaoZhunHua.js"
			],
			[
				"bia",
				"public/javascripts/biaoZhunHua.js"
			],
			[
				"test",
				"public/javascripts/test4.js"
			],
			[
				"formula",
				"biaoZhunFaformula.json"
			],
			[
				"com",
				"views/computing.html"
			],
			[
				"index",
				"views/index.html"
			],
			[
				"stye",
				"public/stylesheets/bootstrap/style.css"
			],
			[
				"test4.",
				"public/javascripts/test4.js"
			],
			[
				"computingp",
				"routes/computingPage.js"
			],
			[
				"test4",
				"public/javascripts/test4.js"
			],
			[
				"1",
				"public/stylesheets/14423.css"
			],
			[
				"css",
				"public/stylesheets/14423.css"
			],
			[
				"index.html",
				"views/index.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 180.0,
		"last_filter": "matrix",
		"selected_items":
		[
			[
				"matrix",
				"initMatrix"
			]
		],
		"width": 395.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 270.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
